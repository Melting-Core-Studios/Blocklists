name: Compile all blocklists
on:
  schedule:
    - cron: '0 */2 * * *'
  push:
    paths:
      - '**/*.txt'
      - '**/compile-config.json'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cfg:
          - path: "Malvertising_Blocklist/compile-config.json"
            out:  "Malvertising_Blocklist/malvertising_blocklist.txt"
          - path: "Tracking_blocklist/compile-config.json"
            out:  "Tracking_blocklist/full_anti_track.txt"

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install jq CLI
        uses: dcarbone/install-jq-action@v3
        with:
          version: "1.6"

      - name: Install hostlist-compiler
        run: npm i -g @adguard/hostlist-compiler

    # ---------- Compile to compare differences -----------
      - name: First compile (before version bump)
        run: |
          hostlist-compiler \
            -c ${{ matrix.cfg.path }} \
            -o temp_output.txt

      - name: Skip job als er geen inhoudwijziging is
        id: need_update
        run: |
          if cmp -s temp_output.txt ${{ matrix.cfg.out }} ; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true"  >> $GITHUB_OUTPUT
          fi

      - name: Stop verdere stappen (matrix-job) als niets veranderde
        if: steps.need_update.outputs.changed == 'false'
        run: echo "Blocklist ongewijzigd – job beëindigd."

    # ---------- Definitive compile ----------
      - name: Bump version (custom 1.b.xxxxc)
        if: steps.need_update.outputs.changed == 'true'
        id: bump
        shell: bash
        run: |
          FILE="${{ matrix.cfg.path }}"

          current=$(jq -r '.version' "$FILE")
          [[ "$current" == "auto" || -z "$current" ]] && current="1.0.0000a"

          IFS='.' read -r major minor patch <<<"$current"
          minor=$((minor + 1))

          rnd=$(shuf -i 1000-9999 -n 1)
          letter=$(tr -dc 'a-z' </dev/urandom | head -c1)
          new_version="1.${minor}.${rnd}${letter}"

          jq ".version = \"${new_version}\"" "$FILE" > "$FILE.tmp" && mv "$FILE.tmp" "$FILE"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Final compile with bumped version
        if: steps.need_update.outputs.changed == 'true'
        run: |
          hostlist-compiler \
            -c ${{ matrix.cfg.path }} \
            -o ${{ matrix.cfg.out }}

      - name: Commit & push
        if: steps.need_update.outputs.changed == 'true'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name  "MCS-Bot"
          git add ${{ matrix.cfg.path }} ${{ matrix.cfg.out }}
          git commit -m "Auto-build ${{ matrix.cfg.out }} – v${{ steps.bump.outputs.new_version }} $(date -u +'%Y-%m-%d %H:%M UTC')"
          git push --force-with-lease
