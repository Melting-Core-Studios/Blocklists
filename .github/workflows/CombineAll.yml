name: Compile and Publish All Blocklists

on:
  schedule:
    - cron: '0 */2 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cfg:
          - key: malvertising
            path: Malvertising_Blocklist/compile-config.json
            out:  Malvertising_Blocklist/malvertising_blocklist.txt
          - key: tracking
            path: Tracking_blocklist/compile-config.json
            out:  Tracking_blocklist/full_anti_track.txt
      max-parallel: 2

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dcarbone/install-jq-action@v3
        with:
          version: "1.6"

      - run: npm install -g @adguard/hostlist-compiler

      - name: Compile preliminary
        run: hostlist-compiler -c "${{ matrix.cfg.path }}" -o "${{ matrix.cfg.out }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.cfg.key }}
          path: |
            ${{ matrix.cfg.path }}
            ${{ matrix.cfg.out }}

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: dcarbone/install-jq-action@v3
        with:
          version: "1.6"

      - run: npm install -g @adguard/hostlist-compiler

      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Process all lists
        id: proc
        run: |
          changed_any=false
          for key in malvertising tracking; do
            cfg="artifacts/$key/compile-config.json"
            out="artifacts/$key/$(basename "$(jq -r .out < "$cfg")")"
            repo_out="$(jq -r .out < "$cfg")"

            # 1) compile temp to compare
            tmp="artifacts/$key/tmp.txt"
            hostlist-compiler -c "$cfg" -o "$tmp"

            if ! cmp -s "$tmp" "$repo_out"; then
              echo "⚙️ $key changed"
              # bump version
              ver=$(jq -r '.version' "$cfg")
              [[ "$ver" == "auto" || -z "$ver" ]] && ver="1.0.0000a"
              IFS='.' read -r _ minor _ <<<"$ver"
              minor=$((minor+1))
              rnd=$(shuf -i 1000-9999 -n1)
              letter=$(shuf -n1 -e {a..z})
              new="1.${minor}.${rnd}${letter}"
              jq ".version=\"${new}\"" "$cfg" >"$cfg.tmp" && mv "$cfg.tmp" "$cfg"
              # final compile
              hostlist-compiler -c "$cfg" -o "$repo_out"
              git add "$cfg" "$repo_out"
              changed_any=true
            fi
          done
          echo "changed_any=$changed_any" >> $GITHUB_OUTPUT

      - name: Commit & push if needed
        if: steps.proc.outputs.changed_any == 'true'
        run: |
          git config user.email "actions@github.com"
          git config user.name  "MCS-Bot"
          git commit -m "Auto-build updated blocklists – $(date -u +'%Y-%m-%d %H:%M UTC')"
          git push
